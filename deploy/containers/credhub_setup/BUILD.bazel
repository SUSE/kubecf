load("@bazel_gazelle//:def.bzl", "gazelle")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@rules_gomplate//:defs.bzl", "gomplate_library")
load("@workspace_status//:def.bzl", "workspace_status")

workspace_status(
    name = "workspace_status",
)

gazelle(
    name = "gazelle",
    prefix = "credhub_setup",
)

go_library(
    name = "credhub_setup_lib",
    srcs = [
        "credhub_info.go",
        "dns.go",
        "main.go",
    ],
    importpath = "credhub_setup",
    visibility = ["//visibility:private"],
    deps = [
        "//cc:go_default_library",
        "//quarks:go_default_library",
        "//uaa:go_default_library",
    ],
)

go_binary(
    name = "credhub_setup",
    embed = [":credhub_setup_lib"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    static = "on",
    visibility = ["//visibility:private"],
)

container_image(
    name = "image",
    entrypoint = ["/credhub_setup"],
    files = [":credhub_setup"],
    visibility = ["//visibility:public"],
)

gomplate_library(
    name = "manifest",
    datasources = {
        "//:workspace_status": "workspace_status",
    },
    left_delim = "<<",
    right_delim = ">>",
    templates = {
        ":manifest.tmpl.yaml": "credhub_setup.yaml",
    },
    visibility = ["//visibility:public"],
)

go_test(
    name = "test",
    srcs = [
        "auth_test.go",
        "main_test.go",
        "secgroup_test.go",
    ],
    embed = [":credhub_setup_lib"],
    deps = [
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
